name: yuejuan-windows

on:
  workflow_dispatch: {}

env:
  APP_NAME: Yuejuan
  APP_QUALITY: stable
  ASSETS_REPOSITORY: https://github.com/qinglion/yuejuan-binaries
  VERSIONS_REPOSITORY: https://github.com/qinglion/yuejuan-versions

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        vscode_arch:
          - x64
          # - arm64
    runs-on: windows-2022
    env:
      VSCODE_ARCH: ${{ matrix.arch }}
      npm_config_node_sqlite3_binary_host_mirror: https://registry.npmmirror.com/-/binary/sqlite3/
    steps:
      - name: Checkout builder
        uses: actions/checkout@v4

      - name: Setup Node.js 14 (fermium)
        uses: actions/setup-node@v4
        with:
          node-version: '14'

      - name: Build and collect assets
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.STRONGER_GITHUB_TOKEN }}
        run: |
          bash build.sh

      - name: Prepare files for signing
        run: |
          mkdir -p signing_temp
          mkdir -p signing_output
          find assets -name "*.exe" -exec cp {} signing_temp/ \;
          find assets -name "*.msi" -exec cp {} signing_temp/ \;
        shell: bash

      - name: Code Signing with SSL.com
        uses: sslcom/esigner-codesign@develop
        with:
          command: batch_sign
          username: ${{ secrets.ES_USERNAME }}
          password: ${{ secrets.ES_PASSWORD }}
          credential_id: ${{ secrets.CREDENTIAL_ID }}
          totp_secret: ${{ secrets.ES_TOTP_SECRET }}
          dir_path: ${{ github.workspace }}/signing_temp
          output_path: ${{ github.workspace }}/signing_output
          override: true
          malware_block: true
          environment_name: PROD
          clean_logs: true
          jvm_max_memory: 1024M
          signing_method: v1

      - name: Copy signed files back
        run: |
          find signing_output -name "*.exe" -exec cp {} assets/ \;
          find signing_output -name "*.msi" -exec cp {} assets/ \;
          rm -rf signing_output
          rm -rf signing_temp
        shell: bash

      - name: Prepare checksums
        shell: bash
        run: bash prepare_checksums.sh

      - name: Upload to OSS
        shell: bash
        env:
          OSS_ACCESS_KEY_ID: ${{ secrets.OSS_ACCESS_KEY_ID }}
          OSS_ACCESS_KEY_SECRET: ${{ secrets.OSS_ACCESS_KEY_SECRET }}
          OSS_BUCKET_NAME: ${{ secrets.OSS_BUCKET_NAME }}
          OSS_ENDPOINT: ${{ secrets.OSS_ENDPOINT }}
          OSS_REGION: ${{ secrets.OSS_REGION }}
          PUBLIC_DOWNLOAD_DOMAIN: ${{ secrets.PUBLIC_DOWNLOAD_DOMAIN }}
          VSCODE_PLATFORM: win32
        run: bash upload_to_oss.sh
        # Required step; script fails if missing creds

      - name: Update versions repo
        shell: bash
        env:
          SHOULD_BUILD: 'yes'
          GITHUB_TOKEN: ${{ secrets.STRONGER_GITHUB_TOKEN }}
          GITHUB_USERNAME: ${{ github.repository_owner }}
          PUBLIC_DOWNLOAD_DOMAIN: ${{ secrets.PUBLIC_DOWNLOAD_DOMAIN }}
          VSCODE_PLATFORM: win32
        run: bash release.sh

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: yuejuan-windows-${{ matrix.arch }}
          path: assets/
          retention-days: 7


